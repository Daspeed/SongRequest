<!DOCTYPE HTML>
<html>
<head>
    <title>SongRequest</title>
    <style type="text/css">
        body
        {
            margin:0px;
            padding:0px;
            background-color:#C4D0ED;
            height: 100%;
            
            font-size:11px;
            font-family:Verdana, Helvetica, Arial;
        }
        
        .top {
          /* fallback */
          background-color: #555555;
          
          /* Firefox 3.6+ */
          background: -moz-linear-gradient(100% 100% 90deg, #222222, #555555);
          
          /* Safari 4-5, Chrome 1-9 */
          /* -webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*) */
          background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#555555), to(#222222));
          
          /* Safari 5.1+, Chrome 10+ */
          background: -webkit-linear-gradient(#555555, #222222);
          
          /* Opera 11.10+ */
          background: -o-linear-gradient(#555555, #222222);
          
          height:60px;
          border:solid 0px #111111;
          border-bottom-width:2px;
          padding-top:10px;
        }
        
        .play
        {
            float:left;
            
            background-color: #70B0FF;
            
            /* Firefox 3.6+ */
            background: -moz-linear-gradient(100% 100% 90deg, #70B0FF, #ADCEFF);

            /* Safari 4-5, Chrome 1-9 */
            /* -webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*) */
            background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#70B0FF), to(#ADCEFF));

            /* Safari 5.1+, Chrome 10+ */
            background: -webkit-linear-gradient(#70B0FF, #ADCEFF);

            /* Opera 11.10+ */
            background: -o-linear-gradient(#70B0FF, #ADCEFF);
            
            border:inset 1px #111111;
            /*
            border-radius:6px;
            -moz-border-radius:6px; 
            */
            
            min-width:500px;
            height:40px;
            margin-left:10px;
        }
        .playinfo
        {
            margin-left:4px;
            margin-top:4px;
            margin-right:4px;
        }
        
        .info
        {
        	background-color: #70B0FF;
        	
        	float:left;
        	width:60px;
            height:40px;
            margin-left:10px;
        	/* Firefox 3.6+ */
            background: -moz-linear-gradient(100% 100% 90deg, #70CCB0, #ADCCCE);

            /* Safari 4-5, Chrome 1-9 */
            /* -webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*) */
            background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#70CCB0), to(#ADCCCE));

            /* Safari 5.1+, Chrome 10+ */
            background: -webkit-linear-gradient(#70CCB0, #ADCCCE);

            /* Opera 11.10+ */
            background: -o-linear-gradient(#70CCB0, #ADCCCE);
        	border:inset 1px #111111;
        }
        
        .content
        {
            min-width:1120px;
            width:100%;
        }
        
        #queue
        {
            background-color: #DBE0E5;
            width:300px;
        	min-height:700px;
            
            -moz-box-shadow: 10px 10px 5px #888888; /* Firefox 3.6 and earlier */
            -webkit-box-shadow: 10px 10px 5px #888888; /* Safari and Chrome */
            box-shadow: 5px 5px 5px #888888;
            
            float:left;
        }
        
        .right
        {
            background-color: #DBE0E5;
            width:65%;
            min-width:755px;
            
        	min-height: 700px;
            
            -moz-box-shadow: 10px 10px 5px #888888; /* Firefox 3.6 and earlier */
            -webkit-box-shadow: 10px 10px 5px #888888; /* Safari and Chrome */
            box-shadow: 5px 5px 5px #888888;
            
            float:left;
            margin-left:20px;
            
            border-bottom-right-radius:20px;
            -moz-border-bottom-right-radius:20px; 
        }
        
        .list, .playlist
        {
            border-collapse:collapse;
            width:100%;
        }
        .list th, .list td, .playlist th, .playlist td
        {
            min-width:100px;
            text-align:left;
            padding-left:4px;
        }
        
        .listheader, .playlistheader
        {
            background-color: #cccccc;
            
            /* Firefox 3.6+ */
            background: -moz-linear-gradient(100% 100% 90deg, #cccccc, #eeeeee);

            /* Safari 4-5, Chrome 1-9 */
            /* -webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*) */
            background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#cccccc), to(#eeeeee));

            /* Safari 5.1+, Chrome 10+ */
            background: -webkit-linear-gradient(#cccccc, #eeeeee);

            /* Opera 11.10+ */
            background: -o-linear-gradient(#cccccc, #eeeeee);
            
            height:20px;
            
            
            border:solid 0px #aaaaaa;
            border-bottom-width:1px;
        }
        
        .evenrow, .oddrow
        {
            border:solid 0px #aaaaaa;
            border-bottom-width:1px;
        }
        
        .evenrow
        {
            background-color:#F9F9F9;
        }
        
        .oddrow
        {
            background-color: #70B0FF;

            /* Firefox 3.6+ */
            background: -moz-linear-gradient(100% 100% 90deg, #70B0FF, #ADCEFF);

            /* Safari 4-5, Chrome 1-9 */
            /* -webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*) */
            background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#70B0FF), to(#ADCEFF));

            /* Safari 5.1+, Chrome 10+ */
            background: -webkit-linear-gradient(#70B0FF, #ADCEFF);

            /* Opera 11.10+ */
            background: -o-linear-gradient(#70B0FF, #ADCEFF);
        }
        
        .evenqueueitemcontainer, .oddqueueitemcontainer
        {
            min-height:40px;
            width:100%;
            
            border:solid 0px #aaaaaa;
            border-bottom-width:1px;
        }
        .evenqueueitemcontainer
        {
            background-color: #70B0FF;

            /* Firefox 3.6+ */
            background: -moz-linear-gradient(100% 100% 90deg, #70B0FF, #ADCEFF);

            /* Safari 4-5, Chrome 1-9 */
            /* -webkit-gradient(<type>, <point> [, <radius>]?, <point> [, <radius>]? [, <stop>]*) */
            background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#70B0FF), to(#ADCEFF));

            /* Safari 5.1+, Chrome 10+ */
            background: -webkit-linear-gradient(#70B0FF, #ADCEFF);

            /* Opera 11.10+ */
            background: -o-linear-gradient(#70B0FF, #ADCEFF);
        }
        .oddqueueitemcontainer
        {
            background-color: #F9F9F9;
        }
        
        .queueitem
        {
            padding:3px;
            color:#222222;
        }
        
        .searchbox
        {
            height:30px;
        }
        
        #searchtext
        {
            width:300px;
        }
        
        .button
        {
            border:solid 1px #777777;
        }
                
        .searchbox .button
        {
            width:80px;
        }
        
        .smallcolumn
        {
            width:60px;
            min-width:0px !important;
        }
        
        .smallcolumn .button
        {
            font-size:9px;
        }
        
        .queueheader
        {
            font-weight:bold;
            padding-left:3px;
        }
        
        a.songlink
        {
        	text-decoration:none;
        	color:black;
        	cursor:default;
        }
    </style>
    <script type="text/javascript" src="/static/underscore-min.js"></script>
    <script type="text/javascript" src="/static/jquery-1.8.2.min.js"></script>
    <script type="text/javascript">
        $(function () {
            window.SongRequest = {
                convertNumberToTime: function (num) {
                    var minutes = parseInt(num / 60, 10);
                    var seconds = parseInt(num % 60, 10);

                    return String(minutes) + ((seconds < 10) ? ':0' : ':') + String(seconds);
                }
            };

            var digitize = function (arg) {
                var allDigits = String(arg).replace(/\D/g, '');
                if (allDigits && allDigits.length > 0)
                    return parseInt(allDigits, 10);
                else
                    return 0;
            };

            var queueTemplate = _.template($("#queueTemplate").html());
            var playlistTemplate = _.template($("#playlistTemplate").html());
            var statusTemplate = _.template($("#statusTemplate").html());
            var titleTemplate = _.template('<%= status.RequestedSong.Song.Artist %> <% if(status.RequestedSong.Song.Artist && status.RequestedSong.Song.Name){ %> - <% } %><%= status.RequestedSong.Song.Name %> | SongRequest');

            var ajaxCall = function (url, type, data, fnSuccess) {
                $.ajax({
                    'url': url + '/RND' + String(Math.random()),
                    'type': type,
                    'data': data,
                    'success': fnSuccess
                });
            };

            var refreshQueue = function () {
                ajaxCall('/dynamic/queue', 'GET', null, function (data) {
                    $("#queue").off('dblclick', '.qitem');

                    $("#queue").html(
                        queueTemplate({ requestedSongs: data.Queue, status: data.PlayerStatus })
                    );

                    $(".play").off('dblclick', '.playinfo');

                    $(".play").html(
                        statusTemplate({ status: data.PlayerStatus })
                    );
                    document.title = titleTemplate({ status: data.PlayerStatus });

                    $("#volumeContainer").text(data.PlayerStatus.Volume);

                    $(".play").on('dblclick', '.playinfo', function (event) {
                        ajaxCall('/dynamic/next', 'GET', null, function (data) {
                            refreshQueue();
                        });
                    });

                    $("#queue").on('dblclick', '.qitem', function (event) {
                        var songId = $(this).attr('data');

                        ajaxCall('/dynamic/queue', 'DELETE', songId, function (data) {
                            refreshQueue();
                        });
                    });
                });
            }

            var getPlayList = function (filter, page) {
                var message = '{ Filter: "' + filter.replace(/"/g, '').replace(/\\/g, '\\\\') + '", Page: ' + String(page) + '}';
                ajaxCall('/dynamic/playlist', 'POST', message, function (data) {
                    var currentPage = Math.max(data.CurrentPage, 1);
                    var totalPageCount = Math.max(data.TotalPageCount, 1);

                    $(".playlist").off("click", ".button");

                    $("#playlistContainer").html(
                        playlistTemplate({ songs: data.SongsForCurrentPage })
                    );

                    $("#currentPage").val(String(currentPage));
                    $("#pageCount").text(String(totalPageCount));

                    if (currentPage > 1)
                        $("#previousbutton").removeAttr('disabled');
                    else
                        $("#previousbutton").attr('disabled', 'disabled');

                    if (currentPage < totalPageCount)
                        $("#nextbutton").removeAttr('disabled');
                    else
                        $("#nextbutton").attr('disabled', 'disabled');

                    $(".playlist").on("click", ".button", function (event) {
                        var songId = $(this).attr('data');
                        ajaxCall('/dynamic/queue', 'POST', songId, function (data) {
                            refreshQueue();
                        });
                    });
                });
            }

            $(document).dblclick(function () {
                if (window.getSelection)
                    window.getSelection().removeAllRanges();
                else if (document.selection)
                    document.selection.empty();
            });

            $(".info").click(function () {
                var newVolume = prompt('New volume', $("#volumeContainer").text());
                if (newVolume) {
                    ajaxCall('/dynamic/volume', 'POST', newVolume, function (volume) {
                        $("#volumeContainer").text(volume);
                    });
                }
            });

            $("#searchbutton").click(function () {
                getPlayList($("#searchtext").val(), 1);
            });
            $("#clearbutton").click(function () {
                $("#searchtext").val('');
                getPlayList('', 1);
            });
            $("#searchForm").on('submit', function () {
                getPlayList($("#searchtext").val(), 1);
                return false;
            });
            $("#pageForm").on('submit change', function () {
                getPlayList($("#searchtext").val(), digitize($("#currentPage").val()));
                return false;
            });

            $("#previousbutton").click(function () {
                getPlayList($("#searchtext").val(), Math.max(1, digitize($("#currentPage").val()) - 1));
            });
            $("#nextbutton").click(function () {
                getPlayList($("#searchtext").val(), Math.max(1, digitize($("#currentPage").val()) + 1));
            });

            refreshQueue();
            setInterval(refreshQueue, 1000);

            getPlayList('', 0);
        });
    </script>
</head>
<body>
<script id="queueTemplate" type="text/template">
<div class="listheader queueheader">
    Queue (<%- requestedSongs.length %> song<%- requestedSongs.length!=1?'s':'' %>,
    <%- window.SongRequest.convertNumberToTime(_.chain(requestedSongs).map(function(requestedSong){ return requestedSong.Song.Duration; }).reduce(function(state, value){ return state+value;}, 0).value()) %>)
</div>
<% 
var acc = Math.max(0, (status.RequestedSong.Song.Duration - status.Position));
_.each(requestedSongs, function(requestedSong, index) {
    requestedSong.ETA=acc;
    acc+=requestedSong.Song.Duration;
%>
<div class="qitem <%- index%2===0?'even':'odd' %>queueitemcontainer" data="<%= requestedSong.Song.TempId %>">
    <div class="queueitem">
        <strong>
        <%- requestedSong.Song.Artist %>
        <% if(requestedSong.Song.Artist && requestedSong.Song.Name){ %>
        -
        <% } %>
        <%- requestedSong.Song.Name %>
        (<%- window.SongRequest.convertNumberToTime(requestedSong.Song.Duration) %>)
        </strong>
        <div>Requested by: <%- requestedSong.RequesterName %> (ETA:
        <%- (function(baseDate){
                var fixer = function(num){ return (num < 10 ? '0':'') + String(num); };
                
                baseDate.setSeconds(baseDate.getSeconds()+requestedSong.ETA);
                return fixer(baseDate.getHours()) + ':' + fixer(baseDate.getMinutes());  })(new Date()) %>)
        </div>
    </div>
</div>
<% }); %>
</script>
<script id="playlistTemplate" type="text/template">
<table class="playlist">
    <tr class="playlistheader">
        <th class="smallcolumn">Action</th>
        <th>Name</th>
        <th>Artist</th>
        <th>Length</th>
    </tr>
    <% _.each(songs, function(song, index) { %>
    <tr class="<%- index%2===0?'odd':'even' %>row">
        <td class="smallcolumn"><input type="button" class="button" data="<%= song.TempId %>" value="+"></td>
        <td><a class="songlink" href="<%- song.FileName %>" title="<%- song.FileName %>"><%- song.Name%></a></td>
        <td><%- song.Artist %></td>
        <td><%- window.SongRequest.convertNumberToTime(song.Duration) %></td>
    </tr>
    <% }); %>
</table>
</script>
<script id="statusTemplate" type="text/template">
<div class="playinfo">  
    <strong>
        <%- status.RequestedSong.Song.Artist %>
        <% if(status.RequestedSong.Song.Artist && status.RequestedSong.Song.Name){ %>
        -
        <% } %>
        <%- status.RequestedSong.Song.Name %>
        <%- window.SongRequest.convertNumberToTime(status.Position) %> / <%- window.SongRequest.convertNumberToTime(status.RequestedSong.Song.Duration)%>
    </strong><br>
    <div>Requested by: <%- status.RequestedSong.RequesterName %></div>
</div>
</script>

<div class="top">
    <div class="play">
        <div class="playinfo">  
            <strong>UNKNOWN - 00:00</strong><br>
            <div>Requested by: UKNOWN</div>
        </div>
    </div>
    <div class="info">
        <div class="playinfo">  
            <strong>Volume</strong><br>
            <div id="volumeContainer"></div>
        </div>
    </div>
    <div style="clear:left;"></div>
</div>
<div class="content">
    <div id="queue">
        <div class="listheader queueheader">
        Queue
        </div>
    </div>
    <div class="right">
        <table class="list searchbox">
            <tr class="listheader">
                <th>Search</th>
                <th>Page</th>
                <th></th>
            </tr>
            <tr class="evenrow">
                <td>
                    <form id="searchForm" action="/static/404.htm">
                        <input type="text" name="searchtext" id="searchtext">
                        <input type="button" class="button" name="searchbutton" id="searchbutton" value="Search">
                        <input type="button" class="button" name="clearbutton" id="clearbutton" value="Clear">
                    </form>
                </td>
                <td>
                    <form id="pageForm" action="/static/404.htm">
                        <input type="text" id="currentPage" value="1"> of <span id="pageCount">1</span>
                    </form>
                </td>
                <td class="controls" style="text-align:right;">
                    <input type="button" class="button" name="previousbutton" disabled="disabled" id="previousbutton" value="Previous">
                    <input type="button" class="button" name="nextbutton" disabled="disabled" id="nextbutton" value="Next">
                </td>
            </tr>
        </table>
        <br>
        <div id="playlistContainer">
            <table class="playlist">
                <tr class="playlistheader">
                    <th class="smallcolumn">Action</th>
                    <th>Name</th>
                    <th>Artist</th>
                    <th>Length</th>
                </tr>
           </table>
       </div>
       <br>
       <br/>
    </div>
</div>
</body>
</html>