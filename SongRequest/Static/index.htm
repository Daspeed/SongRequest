<!DOCTYPE HTML>
<html ng-app="SongRequest">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="/static/favicon.ico">
    <title ng-controller="SongRequestController">SongRequest</title>
    <style>
        body {
            font-size: 0.7em;
            font-family: Tahoma, Geneva, sans-serif;
            background-color: gray;
            margin: 0;
            padding: 0;
        }

        h1 {
            font-size: 1.4em;
            display: inline;
            font-weight: normal;
            color: #fdfdfd;
            text-shadow: 0.1em 0.2em 0.4em #000;
        }

        h2 {
            font-size: 1.2em;
            padding: 0;
            margin: 0;
            font-weight: normal;
            color: #fdfdfd;
            text-shadow: 0.1em 0.2em 0.4em #000;
        }

        div {
            background-color: white;
            padding: 0.5em;
            margin: 0;
            vertical-align: top;
            text-align: left;
        }

        .gradient {
            background: rgb(136,191,232); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(136,191,232,1) 0%, rgba(112,176,224,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(136,191,232,1)), color-stop(100%,rgba(112,176,224,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* Opera 11.10+ */
            background: -ms-linear-gradient(top, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* IE10+ */
            background: linear-gradient(to bottom, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#88bfe8', endColorstr='#70b0e0',GradientType=0 ); /* IE6-9 */
        }

        .button {
            padding: 0;
            margin: 0;
            border: 1px solid #777777;
            text-align: center;
            vertical-align: middle;
            color: #fdfdfd;
            text-shadow: 0.1em 0.2em 0.4em #000;
            background: rgb(136,191,232); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(136,191,232,1) 0%, rgba(112,176,224,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(136,191,232,1)), color-stop(100%,rgba(112,176,224,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* Opera 11.10+ */
            background: -ms-linear-gradient(top, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* IE10+ */
            background: linear-gradient(to bottom, rgba(136,191,232,1) 0%,rgba(112,176,224,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#88bfe8', endColorstr='#70b0e0',GradientType=0 ); /* IE6-9 */
        }

            .button:active {
                color: #fdfdfd;
                background: rgb(48,150,219); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(48,150,219,1) 0%, rgba(136,191,232,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(48,150,219,1)), color-stop(100%,rgba(136,191,232,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(48,150,219,1) 0%,rgba(136,191,232,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(48,150,219,1) 0%,rgba(136,191,232,1) 100%); /* Opera 11.10+ */
                background: -ms-linear-gradient(top, rgba(48,150,219,1) 0%,rgba(136,191,232,1) 100%); /* IE10+ */
                background: linear-gradient(to bottom, rgba(48,150,219,1) 0%,rgba(136,191,232,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3096db', endColorstr='#88bfe8',GradientType=0 ); /* IE6-9 */
            }

        #currentStatusDiv {
            border: 1px solid black;
        }

        #controlCombineDiv {
            border: 1px solid black;
            border-top: 0px;
            padding: 0;
            margin: 0;
        }

        #statusDiv {
            font-size: 1.2em;
        }

        #headerDiv {
            background-color: transparent;
        }

        #controlsDiv {
            text-align: center;
            border: 1px solid gray;
        }

        #outerCombineDiv {
            background: none;
            background-color: transparent;
            padding: 0;
        }

        #queueDiv {
            padding: 0;
            border: 1px solid black;
            border-top: 0px;
            background-color: lightgray;
        }

        p {
            margin: 0;
            padding: 0.1em;
            vertical-align: top;
            text-align: left;
        }

        #queueHeaderDiv {
        }

        #queueListDiv {
            padding: 0;
        }

        .queueItem {
            padding: 0;
            border-top: 1px solid black;
        }

        .selfevenqueueitemcontainer {
            background-color: #CCE2FF;
        }

        .selfoddqueueitemcontainer {
            background-color: #CCE2FF;
        }

        .evenqueueitemcontainer {
            background-color: white;
        }

        .oddqueueitemcontainer {
            background-color: white;
        }

        .statusArtistTitle {
        }

        .statusTime {
            color: gray;
        }

        .statusRequester {
            color: gray;
        }

        .queueArtist {
        }

        .queueTitle {
        }

        .queueTime {
            color: gray;
        }

        .queueRequester {
            color: gray;
        }

        .nextButton {
            width: 5em;
            height: 5em;
        }

        .pauseButton {
            width: 5em;
            height: 5em;
        }

        .rescanButton {
            width: 5em;
            height: 5em;
        }

        .volumeButton {
            width: 5em;
            height: 5em;
        }

        .playinfo {
            border: 1px solid gray;
            display: inline-block;
            width: 5em;
            height: 4em;
            margin: 0;
            padding: 0;
        }

            .playinfo p {
                text-align: center;
            }


        .searchControlsDiv {
            vertical-align: middle;
        }

        .searchtext {
            width: 50%;
            margin: 0;
            padding: 0.15em;
            height: 1.5em;
            vertical-align: middle;
            border: 1px solid gray;
        }

        .searchbutton {
            width: 5em;
            height: 2em;
            vertical-align: middle;
        }

        .clearbutton {
            width: 5em;
            height: 2em;
            vertical-align: middle;
        }

        form {
            display: inline-block;
            vertical-align: middle;
        }

        .pagetext {
            margin: 0;
            padding: 0.15em;
            height: 1.5em;
            vertical-align: top;
            border: 1px solid gray;
            vertical-align: middle;
            width: 3em;
            display: inline-block;
        }

        .previousbutton {
            width: 5em;
            height: 2em;
            display: inline-block;
        }

        .nextbutton {
            width: 5em;
            height: 2em;
            display: inline-block;
        }

        .skipButton {
            float: right;
            width: 3.5em;
            height: 3.5em;
        }

        .addButton {
            width: 3.5em;
            height: 3.5em;
        }

        #combineDiv {
            padding: 0;
            background: none;
            background-color: transparent;
        }

        #songsOuterDiv {
            padding: 0;
            border: 1px solid black;
            border-top: 0px;
        }

        #songsHeaderDiv {
            border-bottom: 1px solid black;
        }

        #songsSearchDiv {
            border-bottom: 1px solid black;
            border-top: 0px;
            margin: 0;
        }

        #songsDiv {
            padding: 0;
            margin: 0;
        }

        .songsTable {
        }

        table {
            border: 0;
            border-collapse: collapse;
            border-spacing: 0 !important;
            width: 100%;
            table-layout: fixed;
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        tr {
            padding: 0;
            margin: 0;
        }

        th {
            font-weight: normal;
            font-size: 1em;
            padding: 0.1em;
        }

        td {
            padding: 0.1em;
        }

        .headerrow {
            border-bottom: 1px solid black;
            color: #fdfdfd;
            text-shadow: 0.1em 0.2em 0.4em #000;
        }

        .evenrow {
            background-color: lightgray;
            border-left: 1px solid lightgray;
            border-right: 1px solid lightgray;
        }

        .oddrow {
            border-left: 1px solid lightgray;
            border-right: 1px solid lightgray;
        }

        .actionColumn {
            text-align: center;
            vertical-align: top;
            width: 4.25em;
            cursor: default;
        }

        .songNameColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            cursor: pointer;
            cursor: hand;
        }

        .songArtistColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 25%;
            cursor: pointer;
            cursor: hand;
        }

        .songDurationColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 3em;
            cursor: default;
        }

        .songGenreColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 8em;
            display: none;
            cursor: pointer;
            cursor: hand;
        }

        .songYearColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 3em;
            cursor: pointer;
            cursor: hand;
        }

        .songDateCreatedColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 8em;
            display: none;
            cursor: pointer;
            cursor: hand;
        }

        .songDatePlayedColumn {
            overflow: hidden;
            -ms-text-overflow: ellipsis;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 8em;
            display: none;
            cursor: pointer;
            cursor: hand;
        }

        @media screen and (min-width: 590px) {

            .songDateCreatedColumn {
                display: table-cell;
            }

            .songDatePlayedColumn {
                display: table-cell;
            }
        }

        .Asc {
            text-decoration: overline;
        }

        .Desc {
            text-decoration: underline;
        }

        @media screen and (min-width: 768px) {

            #currentStatusDiv {
                height: 4.0em;
            }

            #headerDiv {
                display: inline-block;
                background-color: transparent;
            }

            #controlsDiv {
                position: absolute;
                left: 25em;
                top: 0.25em;
                display: inline-block;
                border: none;
                background: none;
            }

            #controlCombineDiv {
            }

            #statusDiv {
            }

            .statusArtistTitle {
            }

            .statusTime {
            }

            .statusRequester {
            }

            #controlsDiv {
                text-align: left;
            }

            #outerCombineDiv {
                width: 100%;
                overflow: hidden;
                display: table;
                padding: 0;
            }

            #queueDiv {
                width: 25em;
                display: table-cell;
            }

            #queueHeaderDiv {
                border-bottom: 1px solid black;
            }

            .queueItem {
                border-top: 0px;
                border-bottom: 1px solid black;
            }

            .queueArtist {
                white-space: nowrap;
                -ms-text-overflow: ellipsis;
                -o-text-overflow: ellipsis;
                text-overflow: ellipsis;
                overflow: hidden;
                display: inline-block;
                width: 20em;
            }

            .queueTitle {
                white-space: nowrap;
                -ms-text-overflow: ellipsis;
                -o-text-overflow: ellipsis;
                text-overflow: ellipsis;
                overflow: hidden;
                display: inline-block;
                width: 20em;
            }

            .queueTime {
                text-align: right;
                float: right;
                display: inline-block;
            }

            #combineDiv {
                overflow: hidden;
                display: table-cell;
            }

            #songsSearchDiv {
                border-left: 0px;
            }

            #songsOuterDiv {
                border-left: 0px;
            }

            .nextButton {
                width: 3em;
                height: 3em;
            }

            .pauseButton {
                width: 3em;
                height: 3em;
            }

            .rescanButton {
                width: 3em;
                height: 3em;
            }

            .volumeButton {
                width: 4em;
                height: 3em;
            }

            .searchtext {
            }

            .searchbutton {
                width: 4em;
                height: 2em;
            }

            .clearbutton {
                width: 4em;
                height: 2em;
            }

            .skipButton {
                width: 1.75em;
                height: 1.75em;
            }

            .addButton {
                width: 1.75em;
                height: 1.75em;
            }

            .actionColumn {
                width: 3em;
            }

            .songNameColumn {
                display: table-cell;
            }

            .songArtistColumn {
                display: table-cell;
            }

            .songDurationColumn {
                display: table-cell;
            }

            .songGenreColumn {
                display: table-cell;
            }

            .songYearColumn {
                display: table-cell;
            }
        }

        @media screen and (min-width: 1024px) {
        }
    </style>
    <script type="text/javascript" src="/static/underscore-min.js"></script>
    <script type="text/javascript" src="/static/jquery-1.8.2.min.js"></script>
    <script type="text/javascript" src="/static/angular.min.js"></script>
    <script type="text/javascript" src="/static/SongRequest.js"></script>
</head>
<body ng-controller="SongRequestController">
    <div id="currentStatusDiv" class="gradient">
        <div id="headerDiv">
            <h1>SongRequest&nbsp;♫</h1>
        </div>
        <div id="controlsDiv">
            <input ng-click="next()" id="next" type="button" class="button nextButton" value="►►">
            <input ng-click="pause()" id="pause" type="button" class="button pauseButton" value="►">
            <input ng-click="rescan()" id="rescan" type="button" class="button rescanButton" value="&#x21bb">
            <input ng-click="changeVolume()" id="volume" type="button" class="button volumeButton" value="Volume&#13;&#10;{{getVolume()}}">
        </div>
    </div>
    <div id="controlCombineDiv">
        <div id="statusDiv">
            <p>
                <span class="statusArtistTitle">{{getCurrentSongName()}}</span>&nbsp;<span class="statusTime">({{getCurrentSongPosition()}}/{{getCurrentSongDuration()}})</span>
            </p>
            <p>
                <span class="statusRequester">Requested by: {{getCurrentSongRequester()}}</span>
            </p>
        </div>
    </div>
    <div id="outerCombineDiv">
        <div id="queueDiv">
            <div id="queueHeaderDiv" class="gradient">
                <h2 ng-pluralize count="queue.length" when="{'0': 'Queue | No songs',
                'one': 'Queue | 1 song',
                'other': 'Queue | {} songs ({{getQueueDuration()}})'}"></h2>
            </div>
            <div id="queueListDiv" ng-repeat="item in queue">
                <div class="queueItem">
                    <div class="{{getQueueItemClass(item, $index)}}">
                        <input class="button skipButton" ng-click="removeFromQueue(item.Song)" type="button" value="-" title="Remove song from queue" />
                        <p><span class="queueRequester">ETA: {{item.Till}}, requested by: {{item.RequesterName}}</span></p>
                        <p>
                            <span class="queueArtist">{{getSongArtist(item.Song)}}</span>
                        </p>
                        <p>
                            <span class="queueTitle">{{getSongName(item.Song)}}</span>&nbsp;<span class="queueTime">({{convertNumberToTime(item.Song.Duration)}})</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div id="combineDiv">
            <div id="songsOuterDiv">
                <div id="songsHeaderDiv" class="gradient">
                    <h2>Songs</h2>
                </div>
                <div id="songsSearchDiv">
                    <form ng-submit="search()">
                        <input type="text" class="searchtext" name="searchtext" id="searchtext" ng-model="filter" value="{{filter}}">
                        <input type="submit" class="button searchbutton" name="searchbutton" id="searchbutton" value="Search">
                        <input ng-click="clear()" type="button" class="button clearbutton" name="clearbutton" id="clearbutton" value="Reset">
                    </form>
                    <form id="pageForm" ng-submit="getPlayList()">
                        Page:&nbsp;
                        <input type="text" name="pagetext" class="pagetext" id="currentPage" ng-model="currentPage" value="{{currentPage}}">
                        of&nbsp;<span class="pageCount">{{pageCount}}</span>
                    </form>
                    <input ng-disabled="currentPage <= 1" ng-click="previousPage()" type="button" class="button previousbutton" name="previousbutton" id="previousbutton" value="Previous">
                    <input ng-disabled="currentPage >= pageCount" ng-click="nextPage()" type="button" class="button nextbutton" name="nextbutton" id="nextbutton" value="Next">
                </div>
                <div id="songsDiv">

                    <table class="songsTable">
                        <tr class="gradient headerrow">
                            <th class="actionColumn">Action</th>
                            <th ng-click="sort('name')" id="nameHeader" class="songNameColumn {{getHeaderClass('name')}}">Name</th>
                            <th ng-click="sort('artist')" id="artistHeader" class="songArtistColumn {{getHeaderClass('artist')}}">Artist</th>
                            <th class="songDurationColumn">Length</th>
                            <th ng-click="sort('genre')" class="songGenreColumn {{getHeaderClass('genre')}}">Genre</th>
                            <th ng-click="sort('year')" class="songYearColumn {{getHeaderClass('year')}}">Year</th>
                            <th ng-click="sort('date')" id="dateHeader" class="songDateCreatedColumn {{getHeaderClass('date')}}">Date added</th>
                            <th ng-click="sort('playdate')" id="playedHeader" class="songDatePlayedColumn {{getHeaderClass('playdate')}}">Last played</th>
                        </tr>
                        <tr class="songRow" ng-repeat="song in searchResult" ng-class-even="'evenrow'" ng-class-odd="'oddrow'">
                            <td class="actionColumn">
                                <input type="button" class="button addButton" value="+" ng-click="addToQueue(song)" title="Add song to queue" />
                            </td>
                            <td class="songNameColumn"><a class="songlink" href="file://{{song.FileName}}" title="{{song.FileName}}">{{song.Name}}</a></td>
                            <td class="songArtistColumn">{{song.Artist}}</td>
                            <td class="songDurationColumn">{{convertNumberToTime(song.Duration)}}</td>
                            <td class="songGenreColumn">{{song.Genre}}</td>
                            <td class="songYearColumn">{{song.Year}}</td>
                            <td class="songDateCreatedColumn">{{song.DateCreated}}</td>
                            <td class="songDatePlayedColumn">{{song.LastPlayTime}}</td>
                        </tr>
                    </table>

                </div>
            </div>
        </div>
    </div>
</body>
</html>
